npx truffle compile

npx truffle migrate --network development
npx truffle console --network development


npx truffle migrate --network rinkeby --dry-run --reset
npx truffle migrate --network rinkeby --reset
npx truffle run verify ASCIIWall --network rinkeby
npx truffle migrate --network mainnet --dry-run --reset
npx truffle migrate --network mainnet --reset
npx truffle run verify ASCIIWall --network mainnet

await web3.eth.getAccounts()
web3.eth.defaultAccount = '0x8dCe97dbc547F704a7940202445453D3B6118Dd3';


 246291065110172205
1591858091632741238



const wall = await ASCIIWall.deployed();
wall.unpause();

wall.safeMint("0x8dCe97dbc547F704a7940202445453D3B6118Dd3", "#FF0000", "John", 0, 30, {value: "20000000000000000"});

wall.safeMint("0x8dCe97dbc547F704a7940202445453D3B6118Dd3", "#FF0000", "@praetorian", 17, 29, {value: "20000000000000000"});

wall.safeMint("0x8dCe97dbc547F704a7940202445453D3B6118Dd3", "#00FF00", "Holly", 1, 0, {value: "20000000000000000"});

wall.safeMint("0x8dCe97dbc547F704a7940202445453D3B6118Dd3", "#00FF00", "Richard", 2, 0, {value: "20000000000000000"});

wall.safeMint("0x8dCe97dbc547F704a7940202445453D3B6118Dd3", "#0000FF", "Hershey", 3, 0, {value: "20000000000000000"});

wall.safeMint("0x8dCe97dbc547F704a7940202445453D3B6118Dd3", "#FFFF00", "@praetorian", 4, 0, {value: "20000000000000000"});

wall.safeMint("0x8dCe97dbc547F704a7940202445453D3B6118Dd3", "#FF00FF", "MMMMMM", 4, 12, {value: "20000000000000000"});

wall.safeMint("0x8dCe97dbc547F704a7940202445453D3B6118Dd3", "#FF00FF", "MMMMMM", 4, 12, {value: "20000000000000000"});

wall.safeMint("0x8dCe97dbc547F704a7940202445453D3B6118Dd3", "#00FFFF", "MMMMMM", 5, 0, {value: "20000000000000000"});

wall.safeMint("0x8dCe97dbc547F704a7940202445453D3B6118Dd3", "#0022FF", "MMMMMM", 5, 0, {value: "20000000000000000"});

wall.safeMint("0x8dCe97dbc547F704a7940202445453D3B6118Dd3", "#11FFFF", "MMMMMM", 6, 0, {value: "20000000000000000"});

wall.safeMint("0x8dCe97dbc547F704a7940202445453D3B6118Dd3", "#0FFF11", "MMMMMM", 7, 0, {value: "20000000000000000"});

wall.safeMint("0x8dCe97dbc547F704a7940202445453D3B6118Dd3", "#FFFFFF", "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijkl", 7, 0, {value: "20000000000000000"});

wall.safeMint("0x8dCe97dbc547F704a7940202445453D3B6118Dd3", "#FFFFFF", "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijkl", 7, 0, {value: "20000000000000000"});

wall.safeMint("0x8dCe97dbc547F704a7940202445453D3B6118Dd3", "#FFFFFF", "Line 15", 15, 0, {value: "20000000000000000"});

wall.safeMint("0x8dCe97dbc547F704a7940202445453D3B6118Dd3", "#FFFFFF", "Line 14", 14, 0, {value: "20000000000000000"});

wall.safeMint("0x8dCe97dbc547F704a7940202445453D3B6118Dd3", "#FFFFFF", "Line 16", 16, 0, {value: "20000000000000000"});

wall.safeMint("0x8dCe97dbc547F704a7940202445453D3B6118Dd3", "#FFFFFF", "Line 16", 16, 0, {value: "20000000000000000"});

wall.safeMint("0x8dCe97dbc547F704a7940202445453D3B6118Dd3", "#FFFFFF", "Line 17", 17, 0, {value: "20000000000000000"});

wall.safeMint("0x8dCe97dbc547F704a7940202445453D3B6118Dd3", "#FFFFFF", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", 17, 0, {value: "20000000000000000"});

wall.safeMint("0x8dCe97dbc547F704a7940202445453D3B6118Dd3", "#FFFFFF", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXAB", 16, 0, {value: "20000000000000000"});

wall.safeMint("0x8dCe97dbc547F704a7940202445453D3B6118Dd3", "#f0f0f0", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXA", 16, 1, {value: "20000000000000000"});

wall.safeMint("0x8dCe97dbc547F704a7940202445453D3B6118Dd3", "#FF0000", "@testtest", 17, 29, {value: "20000000000000000"});


wall.safeMint("0x8dCe97dbc547F704a7940202445453D3B6118Dd3", "#00FF00", "@praetorian", 0, 0, {value: "20000000000000000"});



XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXABC


var colors = ["#02e4c3", "#026e76", "#09499a", "#0988cd", "#031812", "#0a53e1", "#0e99fc", "#097cca", "#0cb762", "#04fc24", "#00532e", "#0966e4", "#0cb57c", "#093d32", "#07d7a0", "#0aacf8", "#0deb4a", "#05e852", "#049452", "#0ddc0f", "#019579", "#0eec49", "#07a83b", "#0cc4af", "#04ff1a", "#04e89b", "#06c912", "#0c6bdd", "#01bbd9", "#08053a", "#0ad707", "#035d31", "#07eb40", "#06d545", "#05e6fc", "#05967b", "#092808", "#013d8c", "#0d7c7e", "#01bd49", "#085688", "#02894a", "#071d69", "#03a629", "#05a033", "#09c9d5", "#08e6e9", "#0e9a74", "#03c570", "#020044", "#0ccbd3", "#005ecc", "#02834a", "#0aa50e", "#003576", "#0696ff", "#030593", "#0534cc", "#0d3996", "#0bae71", "#0d8736", "#05447e", "#05c67b", "#0666b7", "#090a84", "#08b51b", "#016bfb", "#028b2b", "#04cd75", "#097101", "#0f02b4", "#05212e", "#05c40c", "#0d505a", "#0bcb16", "#024782", "#0f20dd", "#0aad64", "#001ad0", "#0b238d", "#0eec08", "#019a23", "#0dd946", "#0772bb", "#0742ee", "#066768", "#05300b", "#0628b3", "#07b784", "#0a5695", "#0e2868", "#07240f", "#05030a", "#02c96d", "#020733", "#07bc7c", "#0c3c60", "#02a2fe", "#0c571a", "#020932"];

while (colors.length < 100) {do {var color = Math.floor((Math.random()*1000000)+1);} while (colors.indexOf(color) >= 0); colors.push("#" + ("000000" + color.toString(16)).slice(-6));}
